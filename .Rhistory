ylab('Hour') +
ggtitle('Average Speed by Weekday and Hour')
ggplot(data = avgspeed, aes(x=WEEKDAY, y=HOUR, fill=SPEED)) +
geom_tile()+
scale_fill_gradient2(low = "red", high = "steelblue", mid = "white", name="Avg Speed")+
xlab('Weekday (Monday = 0)') +
ylab('Hour') +
ggtitle('Average Speed by Weekday and Hour')
data_nozero$DAYHOUR <- paste(data_nozero$WEEKDAY,data_nozero$HOUR)
data_nozero$DAYHOUR <- paste(data_nozero$WEEKDAY,data_nozero$HOUR, sep='-')
ggplot(data=data_nozero, aes(x=DAYHOUR, y=SPEED)) +
geom_point(color = 'steelblue', alpha = 0.5) +
ggtitle(paste('Log Wealth Squared versus Model Residuals')) +
xlab('Log of Absolute Wealth Squared') +
ylab('Model Residuals') +
theme_bw()
View(data_nozero)
ggplot(data=data_nozero, aes(x=DAYHOUR, y=SPEED)) +
geom_point(color = 'steelblue', alpha = 0.3) +
ggtitle(paste('Average Speeds at each Weekday and Hour')) +
xlab('Weekday and Hour') +
ylab('Average Speed') +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) \
ggplot(data=data_nozero, aes(x=DAYHOUR, y=SPEED)) +
geom_point(color = 'steelblue', alpha = 0.3) +
ggtitle(paste('Average Speeds at each Weekday and Hour')) +
xlab('Weekday and Hour') +
ylab('Average Speed') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
max(data_nozero$SPEED)
data_nozero[data_nozero$SPEED>50]
data_nozero[data_nozero$SPEED>50,]
HighData <- data_nozero[data_nozero$SPEED>50,]
View(HighData)
HighData <- data_nozero[data_nozero$SPEED>40,]
HighData <- data_nozero[data_nozero$SPEED>45,]
data_nozero <-data[data$SPEED<46,]
avgspeed <- aggregate(SPEED ~ WEEKDAY + HOUR, data = data_nozero, mean)
data_nozero$HOUR <- substring(as.character(data_nozero$TIMESTAMP),1,2)
data_nozero$DAYHOUR <- paste(data_nozero$WEEKDAY,data_nozero$HOUR, sep='-')
#Aggregate to get average speed
avgspeed <- aggregate(SPEED ~ WEEKDAY + HOUR, data = data_nozero, mean)
ggplot(data = avgspeed, aes(x=WEEKDAY, y=HOUR, fill=SPEED)) +
geom_tile()+
scale_fill_gradient2(low = "red", high = "steelblue", mid = "white", name="Avg Speed")+
xlab('Weekday (Monday = 0)') +
ylab('Hour') +
ggtitle('Average Speed by Weekday and Hour')
HighData <- data_nozero[data_nozero$SPEED<10,]
View(HighData)
#Required libraries
data <- read.csv('Jan2015_TimeSeries.csv')
# Remove zero and very high values
data_nozero <-data[data$SPEED>0,]
data_nozero <-data[data$SPEED<46,]
# Group timestamps into hours
data_nozero$HOUR <- substring(as.character(data_nozero$TIMESTAMP),1,2)
data_nozero$DAYHOUR <- paste(data_nozero$WEEKDAY,data_nozero$HOUR, sep='-')
#Aggregate to get average speed
avgspeed <- aggregate(SPEED ~ WEEKDAY + HOUR, data = data_nozero, mean)
avgspeed <- aggregate(SPEED ~ WEEKDAY + HOUR, data = data_nozero, mean)
#dev.off()
#Let's start by looking at a heat map of days and hours compared to speed
ggplot(data = avgspeed, aes(x=WEEKDAY, y=HOUR, fill=SPEED)) +
geom_tile()+
scale_fill_gradient2(low = "red", high = "steelblue", mid = "white", name="Avg Speed")+
xlab('Weekday (Monday = 0)') +
ylab('Hour') +
ggtitle('Average Speed by Weekday and Hour')
ggplot(data=data_nozero, aes(x=DAYHOUR, y=SPEED)) +
geom_point(color = 'steelblue', alpha = 0.3) +
ggtitle(paste('Average Speeds at each Weekday and Hour')) +
xlab('Weekday-Hour') +
ylab('Average Speed') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=data_nozero, aes(x=DAYHOUR, y=SPEED)) +
geom_point(aes(colour = factor(HasGame))) +
ggtitle(paste('Average Speeds at each Weekday and Hour')) +
xlab('Weekday-Hour') +
ylab('Average Speed') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = avgspeed, aes(x=WEEKDAY, y=HOUR, fill=SPEED)) +
geom_tile()+
scale_fill_gradient2(low = "red", high = "steelblue", mid = "white", name="Avg Speed")+
xlab('Weekday (Monday = 0)') +
ylab('Hour') +
ggtitle('Average Speed by Weekday and Hour')
library(car)
library(lmtest)
library(sandwich)
library(ggplot2)
library(GGally)
library(knitr)
library(AER)
library(ivpack)
library(GGally)
#CHANGE TO WORKING DIRECTORY
setwd("~/Documents/MIDS/271AppliedRegression/Data/")
# Load Datasets
data <- read.csv('Bush.csv')
library(car)
library(lmtest)
library(sandwich)
library(ggplot2)
library(GGally)
library(knitr)
library(AER)
library(ivpack)
library(GGally)
#CHANGE TO WORKING DIRECTORY
setwd("~/Documents/MIDS/271AppliedRegression/Data/")
# Load Datasets
data <- read.csv('Bush.csv')
plot(data, ylab = "Seismic Trace", main = "", col = 'navyblue')
plot(data, ylab = "Approval", main = "", col = 'navyblue')
par(mfrow=c(2,1), oma = c(0, 0, 2, 0))
plot(data$Approval, ylab = "Price (cents per gallon)", xlab = "Weekly", main = "", col = 'seagreen')
hist(data$Approval, xlab = "Price (cents per gallon)", main = "", col = 'seagreen')
appts<-  ts(data$Approval)
par(mfrow=c(2,1), oma = c(0, 0, 2, 0))
plot(appts, ylab = "Price (cents per gallon)", xlab = "Weekly", main = "", col = 'seagreen')
hist(appts, xlab = "Price (cents per gallon)", main = "", col = 'seagreen')
plot(appts, ylab = "Price (cents per gallon)", xlab = "Weekly", main = "", col = 'seagreen')
View(data)
data <- read.csv('Bush.csv', start=c(2001, 1), end=c(2005, 02), frequency=12)
data <- read.csv('Bush.csv', start=c(2001, 1), end=c(2005, 02), frequency=12)
data <- read.csv('Bush.csv')
appts<-  ts(data$Approval, start=c(2001, 1), end=c(2005, 02), frequency=12)
plot(appts, ylab = "Approval", xlab = "Weekly", main = "", col = 'seagreen')
par(mfrow=c(2,1), oma = c(0, 0, 2, 0))
plot(appts, ylab = "Approval", xlab = "Weekly", main = "", col = 'seagreen')
par(mar = rep(2, 4))
plot(appts, ylab = "Approval", xlab = "Weekly", main = "", col = 'seagreen')
hist(appts, xlab = "Approval", main = "", col = 'seagreen')
par(mar = rep(2, 4))
plot(appts, ylab = "Approval", xlab = "Monthly", main = "", col = 'seagreen')
hist(appts, xlab = "Approval", main = "", col = 'seagreen')
acf(appts)$acf
acf(appts, type=c("covariance"))$acf
lag.plot(appts, lags=9, layout=c(3,3),
diag=TRUE, disg.col="red",
main="Autocorrelation between Approval and ")
lag.plot(appts, lags=12, layout=c(3,4),
diag=TRUE, disg.col="red",
main="Autocorrelation between Approval and ")
acf(appts)$acf
acf(appts, type=c("covariance"))$acf
lag.plot(appts, lags=4, layout=c(2,2),
diag=TRUE, disg.col="red",
main="Autocorrelation between Approval and ")
?acf
pacf(appts)
pacf(appts)$pacf
acf(appts)$acf
pacf(appts)$pacf
head(cbind(time(appts),mean(time(appts))),10)
wk = time(appts) - mean(time(appts))
wk2 = wk^2
wk3 = wk^3
cs = cos(2*pi*wk)
sn = sin(2*pi*wk)
reg1 = lm(appts~wk + wk2 + wk3, na.action=NULL)
reg2 = lm(appts~wk + wk2 + wk3 + cs + sn, na.action=NULL)
plot(appts, main="Approval (Mthly Series) and Regression Smoothing",
pch=4, lty=5, lwd=1, xlab="Year",
ylab="Approval Rtg")
lines(fitted(reg1), lty=1, lwd=1.5, col="green")
lines(fitted(reg2), lty=1, lwd=1.5, col="blue")
leg.txt <- c("Original Series", "Cubic Trend Regression Smoothing", "Periodic Regression Smoothing")
legend("topright", legend=leg.txt, lty=c(1,1,1), col=c("black","green","blue"),
bty='n', cex=1, merge = TRUE, bg=336)
plot(appts, main="Approval (Mthly Series) and Regression Smoothing",
pch=4, lty=5, lwd=1, xlab="Year",
ylab="Approval Rtg")
lines(fitted(reg1), lty=1, lwd=1.5, col="green")
lines(fitted(reg2), lty=1, lwd=1.5, col="blue")
head(cbind(time(appts),mean(time(appts))),10)
wk = time(appts) - mean(time(appts))
wk2 = wk^2
wk3 = wk^3
cs = cos(2*pi*wk)
sn = sin(2*pi*wk)
reg1 = lm(appts~wk + wk2 + wk3, na.action=NULL)
reg2 = lm(appts~wk + wk2 + wk3 + cs + sn, na.action=NULL)
plot(appts, main="Approval (Mthly Series) and Regression Smoothing",
pch=4, lty=5, lwd=1, xlab="Year",
ylab="Approval Rtg")
lines(fitted(reg1), lty=1, lwd=1.5, col="green")
lines(fitted(reg2), lty=1, lwd=1.5, col="blue")
# Add Legend
leg.txt <- c("Original Series", "Cubic Trend Regression Smoothing", "Periodic Regression Smoothing")
legend("topright", legend=leg.txt, lty=c(1,1,1), col=c("black","green","blue"),
bty='n', cex=1, merge = TRUE, bg=336)
library(ggplot2)
library(stargazer)
library(AER)
library(knitr)
library(lmtest)
library(sandwich)
library(car)
library(GGally)
opts_chunk$set(warning = FALSE, message = FALSE)
#CHANGE TO WORKING DIRECTORY
setwd("~/Documents/MIDS/210Capstone/should-i-go-sandbox/")
# Load Datasets
data <- read.csv('Jan2015_TimeSeries.csv')
# Remove zero and very high values
data_nozero <-data[data$SPEED>0,]
data_nozero <-data[data$SPEED<46,]
# Group timestamps into hours
data_nozero$HOUR <- substring(as.character(data_nozero$TIMESTAMP),1,2)
data_nozero$DAYHOUR <- paste(data_nozero$WEEKDAY,data_nozero$HOUR, sep='-')
#Aggregate to get average speed
avgspeed <- aggregate(SPEED ~ WEEKDAY + HOUR, data = data_nozero, mean)
#dev.off()
#Let's start by looking at a heat map of days and hours compared to speed
ggplot(data = avgspeed, aes(x=WEEKDAY, y=HOUR, fill=SPEED)) +
geom_tile()+
scale_fill_gradient2(low = "red", high = "steelblue", mid = "white", name="Avg Speed")+
xlab('Weekday (Monday = 0)') +
ylab('Hour') +
ggtitle('Average Speed by Weekday and Hour')
View(avgspeed)
data_nozero <-data[data$SPEED>0,]
data_nozero <-data[data$SPEED<46,]
# Group timestamps into hours
data_nozero$HOUR <- substring(as.character(data_nozero$TIMESTAMP),1,2)
data_nozero$DAYHOUR <- paste(data_nozero$WEEKDAY,data_nozero$HOUR, sep='-')
# Remove midnight - 4am when most busses are in the yard
data_nozero <-data[data$HOUR<5,]
#Aggregate to get average speed
avgspeed <- aggregate(SPEED ~ WEEKDAY + HOUR, data = data_nozero, mean)
View(avgspeed)
data_nozero <-data[data$HOUR>05,]
#Aggregate to get average speed
avgspeed <- aggregate(SPEED ~ WEEKDAY + HOUR, data = data_nozero, mean)
data_nozero <-data_nozero[data_nozero$HOUR>05,]
#Aggregate to get average speed
avgspeed <- aggregate(SPEED ~ WEEKDAY + HOUR, data = data_nozero, mean)
View(data_nozero)
setwd("~/Documents/MIDS/210Capstone/should-i-go-sandbox/")
# Load Datasets
data <- read.csv('Jan2015_TimeSeries.csv')
# Remove zero and irrationally high values
data_nozero <-data[data$SPEED>0,]
data_nozero <-data[data$SPEED<46,]
setwd("~/Documents/MIDS/210Capstone/should-i-go-sandbox/")
# Load Datasets
data <- read.csv('Jan2015_TimeSeries.csv')
# Remove zero and irrationally high values
data_nozero <-data[data$SPEED>0,]
data_nozero <-data[data$SPEED<46,]
# Group timestamps into hours
data_nozero$HOUR <- substring(as.character(data_nozero$TIMESTAMP),1,2)
data_nozero$DAYHOUR <- paste(data_nozero$WEEKDAY,data_nozero$HOUR, sep='-')
# Remove midnight - 4am when most busses are in the yard
data_nozero <-data_nozero[data_nozero$HOUR>05,]
data_nozero <-data[data$SPEED>0,]
data_nozero <-data[data$SPEED<46,]
# Group timestamps into hours
data_nozero$HOUR <- substring(as.character(data_nozero$TIMESTAMP),1,2)
data_nozero$DAYHOUR <- paste(data_nozero$WEEKDAY,data_nozero$HOUR, sep='-')
data_nozero <-data_nozero[data_nozero$HOUR>'05',]
#Aggregate to get average speed
avgspeed <- aggregate(SPEED ~ WEEKDAY + HOUR, data = data_nozero, mean)
View(avgspeed)
#dev.off()
#Let's start by looking at a heat map of days and hours compared to speed
ggplot(data = avgspeed, aes(x=WEEKDAY, y=HOUR, fill=SPEED)) +
geom_tile()+
scale_fill_gradient2(low = "red", high = "steelblue", mid = "white", name="Avg Speed")+
xlab('Weekday (Monday = 0)') +
ylab('Hour') +
ggtitle('Average Speed by Weekday and Hour')
ggplot(data = avgspeed, aes(x=WEEKDAY, y=HOUR, fill=SPEED)) +
geom_tile()+
scale_fill_gradient2(low = "steelblue", high = "red", mid = "white", name="Avg Speed")+
xlab('Weekday (Monday = 0)') +
ylab('Hour') +
ggtitle('Average Speed by Weekday and Hour')
ggplot(data = avgspeed, aes(x=WEEKDAY, y=HOUR, fill=SPEED)) +
geom_tile()+
scale_fill_gradient2(low = "white", high = "steelblue", mid = "white", name="Avg Speed")+
xlab('Weekday (Monday = 0)') +
ylab('Hour') +
ggtitle('Average Speed by Weekday and Hour')
ggplot(data = avgspeed, aes(x=WEEKDAY, y=HOUR, fill=SPEED)) +
geom_tile()+
scale_fill_gradient2(low = "white", high = "steelblue",  name="Avg Speed")+
xlab('Weekday (Monday = 0)') +
ylab('Hour') +
ggtitle('Average Speed by Weekday and Hour')
data_nozero <-data_nozero[data_nozero$HOUR>'04',]
#Aggregate to get average speed
avgspeed <- aggregate(SPEED ~ WEEKDAY + HOUR, data = data_nozero, mean)
data_nozero <-data[data$SPEED>0,]
data_nozero <-data_nozero[data_nozero$SPEED<46,]
# Group timestamps into hours
data_nozero$HOUR <- substring(as.character(data_nozero$TIMESTAMP),1,2)
data_nozero$DAYHOUR <- paste(data_nozero$WEEKDAY,data_nozero$HOUR, sep='-')
# Remove midnight - 4am when most busses are in the yard
data_nozero <-data_nozero[data_nozero$HOUR>'04',]
#Aggregate to get average speed
avgspeed <- aggregate(SPEED ~ WEEKDAY + HOUR, data = data_nozero, mean)
#dev.off()
#Let's start by looking at a heat map of days and hours compared to speed
ggplot(data = avgspeed, aes(x=WEEKDAY, y=HOUR, fill=SPEED)) +
geom_tile()+
scale_fill_gradient2(low = "white", high = "steelblue", name="Avg Speed")+
xlab('Weekday (Monday = 0)') +
ylab('Hour') +
ggtitle('Average Speed by Weekday and Hour')
# Scatterplot with color-coded points
ggplot(data=data_nozero, aes(x=DAYHOUR, y=SPEED)) +
geom_point(aes(colour = factor(HasGame))) +
ggtitle(paste('Average Speeds at each Weekday and Hour')) +
xlab('Weekday-Hour') +
ylab('Average Speed') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = avgspeed, aes(x=WEEKDAY, y=HOUR, fill=SPEED)) +
geom_tile()+
scale_fill_gradient2(low = "white", high = "steelblue", name="Avg Speed")+
xlab('Weekday (Monday = 0)') +
ylab('Hour') +
ggtitle('Average Speed by Weekday and Hour')
ggplot(data=data_nozero, aes(x=DAYHOUR, y=SPEED)) +
geom_point(aes(colour = factor(HasGame))) +
ggtitle(paste('Average Speeds at each Weekday and Hour')) +
xlab('Weekday-Hour') +
ylab('Average Speed') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = data_nozero, aes_string(x = SPEED, y = REGION)) +
geom_boxplot(fill = 'steelblue') +
ggtitle('Speed by Region') +
scale_y_log10() +
ylab('Speed') +
theme_bw()+
theme(axis.text.x = element_text(angle = 90))
ggplot(data = data_nozero, aes(x = SPEED, y = REGION)) +
geom_boxplot(fill = 'steelblue') +
ggtitle('Speed by Region') +
scale_y_log10() +
ylab('Speed') +
theme_bw()+
theme(axis.text.x = element_text(angle = 90))
ggplot(data = data_nozero, aes(x = SPEED, y = REGION)) +
geom_boxplot(fill = 'steelblue') +
ggtitle('Speed by Region') +
ylab('Speed') +
theme_bw()+
theme(axis.text.x = element_text(angle = 90))
ggplot(data = data_nozero, aes(x = SPEED, y = REGION)) +
geom_boxplot(fill = 'steelblue') +
ggtitle('Speed by Region') +
ylab('Speed') +
theme_bw()
ggplot(data = data_nozero, aes(y = REGION,x = SPEED)) +
geom_boxplot(fill = 'steelblue') +
ggtitle('Speed by Region') +
ylab('Speed') +
theme_bw()
ggplot(data = data_nozero, aes(x = REGION,y = SPEED)) +
geom_boxplot(fill = 'steelblue') +
ggtitle('Speed by Region') +
ylab('Speed') +
theme_bw()
ggplot(data = data_nozero, aes(x = REGION,y = SPEED)) +
geom_boxplot(fill = 'steelblue') +
ggtitle('Speed by Region') +
ylab('Speed') +
xlab('Region') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = data_nozero, aes(x = REGION,y = SPEED)) +
geom_boxplot(fill = 'steelblue', outlier.size = 2) +
ggtitle('Speed by Region: Overall') +
ylab('Speed') +
xlab('Region') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = data_nozero, aes(x = REGION,y = SPEED)) +
geom_boxplot(fill = 'steelblue', outlier.size = 0.5) +
ggtitle('Speed by Region: Overall') +
ylab('Speed') +
xlab('Region') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = data_nozero, aes(x = REGION,y = SPEED)) +
geom_boxplot(fill = 'steelblue', outlier.size = 0.2) +
ggtitle('Speed by Region: Overall') +
ylab('Speed') +
xlab('Region') +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data_Loop <-data_nozero[data_nozero$REGION='Chicago Loop',]
data_Loop <-data_nozero[data_nozero$REGION=='Chicago Loop',]
ggplot(data=data_Loop, aes(x=DAYHOUR, y=SPEED)) +
geom_point(aes(colour = factor(HasGame))) +
ggtitle(paste('Chicago Loop Traffic Speeds at each Weekday and Hour')) +
xlab('Weekday-Hour') +
ylab('Average Speed') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=data_Loop, aes(x=DAYHOUR, y=SPEED)) +
geom_point(aes(colour = factor(HasGame))) +
ggtitle(paste('Chicago Loop Traffic at each Weekday and Hour')) +
xlab('Weekday-Hour') +
ylab('Traffic Speed') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
data_NN <-data_nozero[data_nozero$REGION=='Near North',]
# scatterplot with color-coded points
ggplot(data=data_NN, aes(x=DAYHOUR, y=SPEED)) +
geom_point(aes(colour = factor(HasGame))) +
ggtitle(paste('Near North Traffic at each Weekday and Hour')) +
xlab('Weekday-Hour') +
ylab('Traffic Speed') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = data_nozero, aes(x = REGION,y = SPEED)) +
geom_boxplot(fill = 'steelblue', outlier.size = 0.2) +
ggtitle('Speed by Region: Overall') +
ylab('Speed') +
xlab('Region') +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data_West <-data_nozero[data_nozero$REGION=='West Town-Near West',]
# scatterplot with color-coded points
ggplot(data=data_West, aes(x=DAYHOUR, y=SPEED)) +
geom_point(aes(colour = factor(HasGame))) +
ggtitle(paste('Near North Traffic at each Weekday and Hour')) +
xlab('Weekday-Hour') +
ylab('Traffic Speed') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=data_West, aes(x=DAYHOUR, y=SPEED)) +
geom_point(aes(colour = factor(HasGame))) +
ggtitle(paste('West Town Traffic at each Weekday and Hour')) +
xlab('Weekday-Hour') +
ylab('Traffic Speed') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = data_West, aes(x = HOUR,y = SPEED)) +
geom_boxplot(fill = 'steelblue', outlier.size = 0.2) +
ggtitle('West Town Speed by Hour: Overall') +
ylab('Speed') +
xlab('Hour')
ggplot(data = data_West, aes(x = HOUR,y = SPEED)) +
geom_boxplot(fill = 'steelblue', outlier.size = 0.2, outlier.colour =factor(HasGame)) +
ggtitle('West Town Speed by Hour') +
ylab('Speed') +
xlab('Hour')
ggplot(data = data_West, aes(x = HOUR,y = SPEED)) +
geom_boxplot(fill = 'steelblue', outlier.size = 0.2)+
geom_point(aes(colour = factor(HasGame))) +
ggtitle('West Town Speed by Hour') +
ylab('Speed') +
xlab('Hour')
geom_boxplot(fill = 'steelblue', outlier.size = 0.2) +
ggtitle('West Town Speed by Hour') +
ylab('Speed') +
xlab('Hour')
# Seeing some odd values - too high, too low
ggplot(data = data_West, aes(x = HOUR,y = SPEED)) +
geom_boxplot(fill = 'steelblue', outlier.size = 0.2) +
ggtitle('West Town Speed by Hour') +
ylab('Speed') +
xlab('Hour')
ggplot(data = data_West, aes(x = HOUR,y = SPEED)) +
geom_boxplot(fill = 'steelblue', outlier.size = 0.2)+
geom_point(aes(colour = factor(HasGame),size=0.1)) +
ggtitle('West Town Speed by Hour') +
ylab('Speed') +
xlab('Hour')
ggplot(data = data_West, aes(x = HOUR,y = SPEED)) +
geom_boxplot(fill = 'steelblue', outlier.size = 0.2)+
geom_point(aes(colour = factor(HasGame),size=0.01)) +
ggtitle('West Town Speed by Hour') +
ylab('Speed') +
xlab('Hour')
ggplot(data = data_West, aes(x = HOUR,y = SPEED)) +
geom_boxplot(fill = 'steelblue', outlier.size = 0.2)+
geom_point(aes(colour = factor(HasGame),size=1)) +
ggtitle('West Town Speed by Hour') +
ylab('Speed') +
xlab('Hour')
ggplot(data = data_West, aes(x = HOUR,y = SPEED)) +
geom_boxplot(fill = 'steelblue', outlier.size = 0.2)+
geom_point(aes(colour = factor(HasGame),size=0.5)) +
ggtitle('West Town Speed by Hour') +
ylab('Speed') +
xlab('Hour')
ggplot(data = data_West, aes(x = HOUR,y = SPEED)) +
geom_boxplot(fill = 'steelblue', outlier.size = 0.2)+
geom_point(aes(colour = factor(HasGame),size=5)) +
ggtitle('West Town Speed by Hour') +
ylab('Speed') +
xlab('Hour')
ggplot(data = data_West, aes(x = HOUR,y = SPEED)) +
geom_boxplot(fill = 'steelblue', outlier.size = 0.2)+
geom_point(aes(colour = factor(HasGame),size=1/5)) +
ggtitle('West Town Speed by Hour') +
ylab('Speed') +
xlab('Hour')
ggplot(data = data_West, aes(x = HOUR,y = SPEED)) +
geom_boxplot(fill = 'steelblue', outlier.size = 0.2)+
geom_point(aes(colour = factor(HasGame), alpha = 0.2)) +
ggtitle('West Town Speed by Hour') +
ylab('Speed') +
xlab('Hour')
ggplot(data = data_West, aes(x = HOUR,y = SPEED)) +
geom_boxplot(fill = 'steelblue', outlier.size = 0.2)+
geom_point(aes(colour = factor(HasGame), alpha = 0.05)) +
ggtitle('West Town Speed by Hour') +
ylab('Speed') +
xlab('Hour')
ggplot(data = data_West, aes(x = HOUR,y = SPEED)) +
geom_point(aes(colour = factor(HasGame), alpha = 0.05)) +
geom_boxplot(fill = 'steelblue', outlier.size = 0.2)+
ggtitle('West Town Speed by Hour') +
ylab('Speed') +
xlab('Hour')
