library(ggplot2)
library(stargazer)
library(AER)
library(knitr)
library(lmtest)
library(sandwich)
library(car)
library(GGally)
opts_chunk$set(warning = FALSE, message = FALSE)
#CHANGE TO WORKING DIRECTORY
setwd("~/Documents/MIDS/210Capstone/should-i-go-sandbox/")
# Load Datasets
data <- read.csv('Jan2015_TimeSeries.csv')
# Remove zero and irrationally high values
data_nozero <-data[data$SPEED>0,]
data_nozero <-data_nozero[data_nozero$SPEED<46,]
# Group timestamps into hours
data_nozero$HOUR <- substring(as.character(data_nozero$TIMESTAMP),1,2)
data_nozero$DAYHOUR <- paste(data_nozero$WEEKDAY,data_nozero$HOUR, sep='-')
# Remove midnight - 4am when most busses are in the yard
data_nozero <-data_nozero[data_nozero$HOUR>'04',]
#Aggregate to get average speed
avgspeed <- aggregate(SPEED ~ WEEKDAY + HOUR, data = data_nozero, mean)
data_nozero$datetime <- format(as.POSIXct(paste(data_nozero$DATE, data_nozero$TIMESTAMP)), "%Y-%m-%d %H:%M:%S")
data_nozero$datetime <- strptime(data_nozero$datetime, "%Y-%m-%d %H:%M:%S")
data_nozero$HOUR <- as.factor(data_nozero$HOUR)
data_nozero$WEEKDAY <- as.factor(data_nozero$WEEKDAY)
# Sort data
data_nozero <- data_nozero[order(data_nozero$datetime) , ]
# Linear Regression Model
rm1 <- lm(SPEED ~ REGION + WEEKDAY + HOUR + REGION:WEEKDAY + REGION:HOUR,data = data_nozero)
summary(rm1)
rm5 <- lm(SPEED ~ REGION:WEEKDAY + REGION:HOUR + REGION:HasGame,data = data_nozero)
summary(rm5)
test_data_nogame <- data_nozero[(data_nozero$DATE == "2015-01-05" & data_nozero$HOUR == '20'), ]
test_data_nogame$HasGame <- 0
View(test_data_nogame)
test_data_nogame <- data_nozero[(data_nozero$DATE == "2015-01-05" & data_nozero$HOUR == '20' & data_nonzero$TIMESTAMP=="20:00:00"), ]
data_nozero$DATE == "2015-01-05" & data_nozero$HOUR == '20' & data_nonzero$TIMESTAMP=="20:00:00"
data_nozero$DATE == "2015-01-05" & data_nozero$HOUR == '20' & data_nozero$TIMESTAMP=="20:00:00"
test_data_nogame <- data_nozero[(data_nozero$DATE == "2015-01-05" & data_nozero$HOUR == '20' & data_nozero$TIMESTAMP=="20:00:00"), ]
test_data_nogame$HasGame <- 0
test_data_nogame$PredictedRate <- predict(rm1, newdata = test_data_nogame)
test_data_nogame <- test_data_nogame[, c('datetime','REGION_ID','PredictedRate')]
test_data_game <- data_nozero[(data_nozero$DATE == "2015-01-05" & data_nozero$HOUR == '20' & data_nozero$TIMESTAMP=="20:00:00"), ]
test_data_game$HasGame <- 1
test_data_game$PredictedRate <- predict(rm5, newdata = test_data_game)
test_data_game <- test_data_game[, c('datetime','REGION_ID','PredictedRate')]
write.csv(test_data_nogame, file = "test_data_nogame.csv")
write.csv(test_data_game, file = "test_data_game.csv")
? read.csv
library(car)
library(lmtest)
library(sandwich)
library(ggplot2)
library(GGally)
library(knitr)
library(AER)
library(ivpack)
library(GGally)
#CHANGE TO WORKING DIRECTORY
setwd("~/Documents/MIDS/271AppliedRegression/Data/")
# Load Datasets
data <- read.csv('NikeRevenues.txt', header = TRUE, sep = ";")
polyroot(c(1, -1/3))
polyroot(c(1, -3/2, 1/2))
polyroot(c(1, 1/4))
polyroot(c(1, 0, 1/4))
data <- read.csv('NikeRevenues.txt', header = TRUE, sep = " ")
View(data)
rev<-  ts(data$Revenue, start = c(1999), end = c(2009), frequency=4)
rev<-  ts(data$Revenue, start = c(1999), end = c(2008), frequency=4)
plot(rev)
plot(decompose(rev))
acf(rev)
pacf(rev)
plot(decompose(rev))
pacf(rev)
decompose<-decompose(rev)
plot(decompose(rev))
View(data)
View(data)
library(ggplot2)
library(stargazer)
library(AER)
library(knitr)
library(lmtest)
library(sandwich)
library(car)
library(GGally)
opts_chunk$set(warning = FALSE, message = FALSE)
#CHANGE TO WORKING DIRECTORY
setwd("~/Documents/MIDS/210Capstone/should-i-go-sandbox/")
# Load Datasets
data <- read.csv('Jan2015_TimeSeries.csv')
# Remove zero and irrationally high values
data_nozero <-data[data$SPEED>0,]
data_nozero <-data_nozero[data_nozero$SPEED<46,]
# Group timestamps into hours
data_nozero$HOUR <- substring(as.character(data_nozero$TIMESTAMP),1,2)
data_nozero$DAYHOUR <- paste(data_nozero$WEEKDAY,data_nozero$HOUR, sep='-')
# Remove midnight - 4am when most busses are in the yard
data_nozero <-data_nozero[data_nozero$HOUR>'04',]
#Aggregate to get average speed
data_nozero <-data_nozero[data_nozero$HOUR>'04',]
#Aggregate to get average speed
avgspeed <- aggregate(SPEED ~ WEEKDAY + HOUR, data = data_nozero, mean)
data_Loop <-data_nozero[data_nozero$REGION=='Chicago Loop',]
# scatterplot with color-coded points
ggplot(data=data_Loop, aes(x=DAYHOUR, y=SPEED)) +
geom_point(aes(colour = factor(HasGame))) +
ggtitle(paste('Chicago Loop Traffic at each Weekday and Hour')) +
xlab('Weekday-Hour') +
ylab('Traffic Speed') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ts_Loop <-  ts(data_Loop$SPEED)
plot(ts_Loop, type="l")
plot(decompose(ts_Loop))
plot(ts_Loop, type="l")
decompose(ts_Loop)
decompose(ts_Loop)
pacf(rev)
acf(ts_Loop)
plot(ts_Loop, type="l")
lag.plot(ts_Loop, lags=9, layout=c(3,3), diag=TRUE, disg.col="blue"
lag.plot(ts_Loop, lags=9, layout=c(3,3), diag=TRUE, disg.col="blue")
# Near North Loop
lag.plot(ts_Loop, lags=9, layout=c(3,3), diag=TRUE, disg.col="blue")
pacf(ts_Loop)
plot(decompose(ts_Loop))
ar(rev)
ar(rev, aic = TRUE, order.max = NULL,
method = c("yule-walker"),
na.action, series)
ar(rev, aic = TRUE, order.max = NULL,
method = c("yule-walker"))
pacf(rev)  # indicates an AR1 process
arm <- ar(rev, aic = TRUE, order.max = NULL, method = c("yule-walker"))
plot(arm$resid)
acf(arm$resid)
acf(arm$resid)
acf(arm$resid,na.rm)
acf(arm$resid)
pacf(arm$resid)
lag.plot(arm$resid, lags=9, layout=c(3,3), diag=TRUE, disg.col="blue")
lag.plot(arm$resid, lags=9, layout=c(3,3), diag=TRUE)
plot(arm$resid)
acf(na.omit(arm$resid))
pacf(na.omit(arm$resid))
