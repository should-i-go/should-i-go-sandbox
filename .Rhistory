boxplot(saratoga$Price)
?boxplot
boxplot(Price ~ Fireplace, data = saratoga)
qplot(Price, geom = 'hist', data = saratoga, color = Fireplace)
library(lmtest)
qplot(Price, geom='density', data = saratoga, color = Fireplace)
qplot(Price, geom='density', data = saratoga, facets = Fireplace)
qplot(Price, geom='density', data = saratoga, facets = ~Fireplace)
qplot(Price, geom='density', data = saratoga, color = Fireplace)
qplot(Price, geom='density', data = saratoga, facets = ~Fireplace, color = Fireplace)
qplot(Price, geom='density', data = saratoga, color = Fireplace)
qplot(Price, geom='density', data = saratoga, facets = ~Fireplace, color = Fireplace)
qplot(Price, geom='density', data = saratoga, color = Fireplace)
tapply(saratoga$Price,saratoga$Fireplace,mean) #shows wage bias married people have higher wages
tapply(saratoga$Price,saratoga$Fireplace,sd) #shows average price for homes with and without fireplaces
qplot(X, Y, geom=c('point', 'smooth'), method='lm', data=saratoga, facets=~Fireplace)
qplot(Living.Area, Price, geom=c('point', 'smooth'), method='lm', data=saratoga, facets=~Fireplace)
?qplot
qplot(Living.Area, Price, geom=c('point', 'smooth'), data=saratoga, facets=~Fireplace)
qplot(Price, Acres , geom=c('point', 'smooth'), method='lm', data=saratoga, facets=~Fireplace);
qplot(Living.Area, Price, geom=c('point', 'smooth'), data=saratoga, facets=~Fireplace)
model1 = lm(Price ~ Living.Area, data = saratoga)
summary(model1)
qplot(Price, Living.Area , geom=c('point', 'smooth'), method='lm', data=saratoga, facets=~Fireplace);
qplot(Price, Acres, geom=c('point', 'smooth'), method='lm', data=saratoga, facets=~Fireplace);
model2 = lm(Price ~ Living.Area + Fireplace, data = saratoga)
summary(model2)
qplot(Living.Area, Price, geom=c('point', 'smooth'), data=saratoga, color=Fireplace)
model2 = lm(Price ~ Living.Area + Fireplace + Living.Area*Fireplace, data = saratoga)
model3 = lm(Price ~ Living.Area + Fireplace + Living.Area*Fireplace, data = saratoga)
summary(model3)
model2 = lm(Price ~ Living.Area + Fireplace, data = saratoga)
summary(model2)
plot(model3)
plot(model3)
plot(model2)
plot(model3)
summary(model3)
tapply(rstandard(model3),saratoga$Fireplace,mean)
tapply(rstandard(model1),saratoga$Fireplace,mean)
tapply(rstandard(model2),saratoga$Fireplace,mean)
plot(saratoga$Price,saratoga$Living.Area)
qplot(Living.Area, Price, geom=c('point', 'smooth'), data=saratoga, color=Fireplace)
qplot(Living.Area, Price, geom=c('point'), data=saratoga, color=Fireplace)
geom_smooth(method='lm',formula= ~ Living.Area + Fireplace + Living.Area*Fireplace, data = saratoga)
geom_smooth(method='lm',formula= ~ Living.Area + Fireplace + Living.Area*Fireplace, data = saratoga)
geom_smooth(method='lm',formula=y~x)
qplot(Living.Area, Price, geom=c('point'), data=saratoga, color=Fireplace) +  geom_smooth(method='lm',formula=y~x)
library(ggplot2)
library(GGally)
library(knitr)
library(lmtest)
library(car)
library(sandwich)
opts_chunk$set(warning=FALSE, message=FALSE, tidy.opts = list(width.cutoff=60))
load("~/Documents/MIDS/271AppliedRegression/data/twoyear.RData")
load("~/Documents/MIDS/271AppliedRegression/data/twoyear.RData")
kable(desc, caption = "Variable Descriptions")
str(data)
summary(data)
$log(wage) = \beta_0 + \beta_1 jc + \beta_2 univ + \beta_3 exper + \beta_4 black + \beta_5 hispanic + \beta_6 AA + \beta_7 BA + \beta_8 exper + \beta_9 black + \varepsilon$
$log(wage) = \beta_0 + \beta_1 jc + \beta_2 univ + \beta_3 exper + \beta_4 black + \beta_5 hispanic + \beta_6 AA + \beta_7 BA + \beta_8 exper + \beta_9 black + \varepsilon$
log(wage) = $\beta_0 + \beta_1 jc + \beta_2 univ + \beta_3 exper + \beta_4 black + \beta_5 hispanic + \beta_6 AA + \beta_7 BA + \beta_8 exper + \beta_9 black + \varepsilon$
log(wage) = $\beta_0 + \beta_1 jc + \beta_2 univ + \beta_3 exper + \beta_4 black + \beta_5$ hispanic + $\beta_6 AA + \beta_7 BA + \beta_8 exper + \beta_9 black + \varepsilon$
log(wage) = $\beta_0$ + $\beta_1$ jc + $\beta_2$ univ + $\beta_3$ exper + $\beta_4$ black + $\beta_5$ hispanic + $\beta_6$ AA + $\beta_7$ BA + $\beta_8$ exper + $\beta_9$ black + $\varepsilon$
kable(desc, caption = "Variable Descriptions")
model1 = lm(lwage ~ jc + univ + exper + black + hispanic + AA + BA + exper:black, data = data)
summary(model1)
plot(model1)
Holding all other variables constant, $log(wage_nouniv)$ = X and $log(wage_univ)$ = X + $\widehat{\beta_2}$
exp(0.0732806)
model2 = lm(lwage ~ jc + univ + exper + black + hispanic + AA + BA + exper:black + jc:black, data = data)
summary(model2)
hist(data$lwage)
summary(data)
plot(model1)
plot(model1)
plot(model1)
plot(model1)
plot(model2)
coeftest(model2,vcov=vcovHC)
hist(data$exper)
prate_wage <- ggplot(data = data, aes(x = lwage)) +
xlab('Log of Wage') +
ylab('# Records') +
ggtitle('Distribution of Log(Wage)') +
theme_bw()
prate_wage + geom_histogram(fill = 'steelblue', binwidth = 2)
prate_wage + geom_histogram(fill = 'steelblue', binwidth = 0.1)
prate_wage + geom_histogram(fill = 'steelblue', binwidth = 0.05)
prate_exper <- ggplot(data = data, aes(x = exper)) +
xlab('Experience') +
ylab('# Records') +
ggtitle('Distribution of Experience') +
theme_bw()
prate_exper + geom_histogram(fill = 'steelblue', binwidth = 0.05)
prate_exper + geom_histogram(fill = 'steelblue', binwidth = 5)
prate_exper <- ggplot(data = data, aes(x = exper)) +
xlab('Experience (Months)') +
ylab('# Records') +
ggtitle('Distribution of Experience') +
theme_bw()
prate_exper + geom_histogram(fill = 'steelblue', binwidth = 5)
prate_exper + geom_histogram(fill = 'steelblue', binwidth = 3)
data$experyear = data$exper/12
hist(data$experyear)
hist(data$experyear)
prate_univ <- ggplot(data = data, aes(x = univ)) +
xlab('University') +
ylab('# Records') +
ggtitle('Distribution of University') +
theme_bw()
prate_univ + geom_histogram(fill = 'steelblue', binwidth = 0.5)
prate_univ + geom_histogram(fill = 'steelblue', binwidth = 0.1)
prate_univ + geom_histogram(fill = 'steelblue', binwidth = 0.5)
prate_univ + geom_histogram(fill = 'steelblue', binwidth = 1)
prate_univ + geom_histogram(fill = 'steelblue', binwidth = 0.25)
prate_univ <- ggplot(data = data[data$univ>0], aes(x = univ)) +
xlab('University') +
ylab('# Records') +
ggtitle('Distribution of University') +
theme_bw()
prate_univ + geom_histogram(fill = 'steelblue', binwidth = 0.25)
prate_univ <- ggplot(data = data[data$univ!=0], aes(x = univ)) +
xlab('University') +
ylab('# Records') +
ggtitle('Distribution of University') +
theme_bw()
prate_univ + geom_histogram(fill = 'steelblue', binwidth = 0.25)
prate_univ <- ggplot(data = data, aes(x = univ)) +
xlab('University') +
ylab('# Records') +
ggtitle('Distribution of University') +
theme_bw()
prate_univ + geom_histogram(fill = 'steelblue', binwidth = 0.25)
prate_univ <- ggplot(data = data, aes(x = univ)) +
xlab('University') +
ylab('# Records') +
ggtitle('Distribution of University') +
theme_bw()
prate_univ + geom_histogram(fill = 'steelblue', binwidth = 0.5)
prate_univ <- ggplot(data = data, aes(x = univ)) +
xlab('University (Years)') +
ylab('# Records') +
ggtitle('Distribution of Years at University') +
theme_bw()
prate_univ + geom_histogram(fill = 'steelblue', binwidth = 0.5)
data$univandexper = data$experyear + data$univ
model3 = lm(lwage ~ jc + univ + univandexper + black + hispanic + AA + BA + exper:black, data = data)
plot(model3)
coeftest(model3,vcov=vcovHC)
coeftest(model1,vcov=vcovHC)
waldtest(model1,vcov=vcovHC)
data$expersq = data$exper^2
model4 = lm(lwage ~ jc + univ + exper + expersq + black + hispanic + AA + BA + exper:black, data = data)
coeftest(model4,vcov=vcovHC)
library(car)
library(lmtest)
library(sandwich)
library(ggplot2)
library(GGally)
library(knitr)
load("~/Documents/MIDS/271AppliedRegression/crime3.rdata")
summary(data)
str(data)
kable(desc, caption = "Variable Descriptions")
model_diff = lm(clcrime ~ cclrprc1 + cclrprc2, data = data)
coeftest(model_diff,vcov=vcovHC)
model_nondiff = lm(crime ~ clrprc1 + clrprc2, data = data)
model_nondiff = lm(lcrime ~ clrprc1 + clrprc2, data = data)
coeftest(model_diff,vcov=vcovHC)
coeftest(model_nondiff,vcov=vcovHC)
library(car)
library(lmtest)
library(sandwich)
library(ggplot2)
library(GGally)
library(knitr)
load("~/Documents/MIDS/271AppliedRegression/card.RData")
kable(desc, caption = "Variable Descriptions")
summary(data)
str(data)
model_diff = lm(lwage ~ educ, data = data)
plot(model_diff)
coeftest(model_diff,vcov=vcovHC)
model_near = lm(lwage ~ educ + educ:nearc4, data = data)
coeftest(model_near,vcov=vcovHC)
model_near = lm(lwage ~ educ + nearc4, data = data)
model_near = lm(lwage ~ educ + nearc4, data = data)
coeftest(model_near,vcov=vcovHC)
plot(nearc4,model_diff$residuals)
plot(data$nearc4,model_diff$residuals)
corr(data$nearc4,model_diff$residuals)
correl(data$nearc4,model_diff$residuals)
cor(data$nearc4,model_diff$residuals)
cor(data$educ,model_diff$residuals)
model_near = lm(lwage ~ educ + nearc4, data = data)
coeftest(model_near,vcov=vcovHC)
coeftest(model_near,vcov=vcovHC)
model_near = lm(lwage ~ educ + nearc4 + educ*nearc4, data = data)
coeftest(model_near,vcov=vcovHC)
model_near = lm(lwage ~ educ + nearc4, data = data)
coeftest(model_near,vcov=vcovHC)
install.packages("IV")
library(IV)
install.packages("riv")
library(riv)
?riv
ivreg <- ivreg(lwage ~ educ | nearc4, data = data)
ivreg <- ivreg(lwage ~ educ | nearc4, data = data)
ivreg <- riv(lwage ~ educ | nearc4, data = data)
ivreg <- riv(lwage ~ educ | nearc4, data = data)
ivreg <- iv_reg(lwage ~ educ | nearc4, data = data)
ivreg <- iv_reg(lwage,educ, nearc4, data = data)
install.packages("AER")
install.packages("ivpack")
library(AER)
library(ivpack)
ivreg <- iv_reg(lwage,educ, nearc4, data = data)
?ivpack
ivreg <- ivreg(lwage ~ educ | nearc4, data = data)
summary(ivreg)
robust.se(ivreg)
model_nearc4 = lm(lwage ~ educ, data = data[data$nearc4 == 1])
A time series $x_t$ is *weakly stationary* if it is mean and variance stationary and its autocovariance $Cov(x_t,x_{t+k})$ depends on the time placement k and can be written as $\gamma^{(k)}$.
ggplot(data = data_West, aes(x=datetime, y=SPEED)) +
geom_line(color = factor(HasGame), alpha = 0.5) +
xlab('') +
ylab('West Town traffic speed (mph)') +
theme_bw()
library(ggplot2)
library(stargazer)
library(AER)
library(knitr)
library(lmtest)
library(sandwich)
library(car)
library(GGally)
opts_chunk$set(warning = FALSE, message = FALSE)
#CHANGE TO WORKING DIRECTORY
setwd("~/Documents/MIDS/210Capstone/should-i-go-sandbox/")
# Load Datasets
data <- read.csv('Jan2015_TimeSeries.csv')
# Remove zero and irrationally high values
data_nozero <-data[data$SPEED>0,]
data_nozero <-data_nozero[data_nozero$SPEED<46,]
# Group timestamps into hours
data_nozero$HOUR <- substring(as.character(data_nozero$TIMESTAMP),1,2)
data_nozero$DAYHOUR <- paste(data_nozero$WEEKDAY,data_nozero$HOUR, sep='-')
# Remove midnight - 4am when most busses are in the yard
data_nozero <-data_nozero[data_nozero$HOUR>'04',]
#Aggregate to get average speed
avgspeed <- aggregate(SPEED ~ WEEKDAY + HOUR, data = data_nozero, mean)
#dev.off()
#Let's start by looking at a heat map of days and hours compared to speed
ggplot(data = avgspeed, aes(x=WEEKDAY, y=HOUR, fill=SPEED)) +
geom_tile()+
scale_fill_gradient2(low = "white", high = "steelblue", name="Avg Speed")+
xlab('Weekday (Monday = 0)') +
ylab('Hour') +
ggtitle('Average Speed by Weekday and Hour')
#Monday - Friday:
#We can see that rush hour is really intense in the 7 and 8am hours, wantes a little from the 9am
#through 2pm hours, and then ramps back up from the 3pm through 6pm hours.
# Scatterplot with color-coded points
ggplot(data=data_nozero, aes(x=DAYHOUR, y=SPEED)) +
geom_point(aes(colour = factor(HasGame))) +
ggtitle(paste('Traffic Speeds at each Weekday and Hour')) +
xlab('Weekday-Hour') +
ylab('Average Speed') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# We need to show how regions differ
# Boxplot of all regions over whole month
ggplot(data = data_nozero, aes(x = REGION,y = SPEED)) +
geom_boxplot(fill = 'steelblue', outlier.size = 0.2) +
ggtitle('Speed by Region: Overall') +
ylab('Speed') +
xlab('Region') +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Chicago Loop
data_Loop <-data_nozero[data_nozero$REGION=='Chicago Loop',]
# scatterplot with color-coded points
ggplot(data=data_Loop, aes(x=DAYHOUR, y=SPEED)) +
geom_point(aes(colour = factor(HasGame))) +
ggtitle(paste('Chicago Loop Traffic at each Weekday and Hour')) +
xlab('Weekday-Hour') +
ylab('Traffic Speed') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data = data_West, aes(x = HOUR,y = SPEED)) +
geom_point(aes(color = factor(HasGame), alpha = 0.05)) +
geom_boxplot(alpha = 0.5, outlier.size = 0.2)+
ggtitle('West Town Speed by Hour') +
ylab('Speed') +
xlab('Hour')
data_West <-data_nozero[data_nozero$REGION=='West Town-Near West',]
# scatterplot with color-coded points
ggplot(data=data_West, aes(x=DAYHOUR, y=SPEED)) +
geom_point(aes(colour = factor(HasGame))) +
ggtitle(paste('West Town Traffic at each Weekday and Hour')) +
xlab('Weekday-Hour') +
ylab('Traffic Speed') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# boxplot
ggplot(data = data_West, aes(x = HOUR,y = SPEED)) +
geom_point(aes(color = factor(HasGame), alpha = 0.05)) +
geom_boxplot(alpha = 0.5, outlier.size = 0.2)+
ggtitle('West Town Speed by Hour') +
ylab('Speed') +
xlab('Hour')
# Seeing some odd values - too high, too low
data_nozero$datetime <- format(as.POSIXct(paste(data_nozero$DATE, data_nozero$TIMESTAMP)), "%Y-%m-%d %H:%M:%S")
data_West <-data_nozero[data_nozero$REGION=='West Town-Near West',]
summary(data_West)
str(data_West)
head(data_West)
tail(data_West)
# Sort data
data_West <- data_West[order(data_West$datetime) , ]
data_West$datetime <- strptime(data_West$datetime, "%Y-%m-%d %H:%M:%S")
# Plot GG Plot
ggplot(data = data_West, aes(x=datetime, y=SPEED)) +
geom_line(color = factor(HasGame), alpha = 0.5) +
xlab('') +
ylab('West Town traffic speed (mph)') +
theme_bw()
ggplot(data = data_West, aes(x=datetime, y=SPEED)) +
geom_points(color = factor(HasGame), alpha = 0.5) +
xlab('') +
ylab('West Town traffic speed (mph)') +
theme_bw()
ggplot(data = data_West, aes(x=datetime, y=SPEED)) +
geom_point(color = factor(HasGame), alpha = 0.5) +
xlab('') +
ylab('West Town traffic speed (mph)') +
theme_bw()
ggplot(data=data_West, aes(x=datetime, y=SPEED)) +
geom_point(aes(colour = factor(HasGame))) +
ggtitle(paste('West Town Traffic at each Weekday and Hour')) +
xlab('Weekday-Hour') +
ylab('Traffic Speed') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=data_West, aes(x=datetime, y=SPEED)) +
geom_point(aes(colour = factor(HasGame), alpha = 0.1)) +
ggtitle(paste('West Town Traffic at each Weekday and Hour')) +
xlab('Weekday-Hour') +
ylab('Traffic Speed') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=data_West, aes(x=datetime, y=SPEED)) +
geom_point(aes(colour = factor(HasGame), alpha = 0.01)) +
ggtitle(paste('West Town Traffic at each Weekday and Hour')) +
xlab('Weekday-Hour') +
ylab('Traffic Speed') +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data=data_West, aes(x=datetime, y=SPEED)) +
geom_point(aes(colour = factor(HasGame))) +
ggtitle(paste('West Town Traffic at each Weekday and Hour')) +
xlab('Timestamp') +
ylab('Traffic Speed') +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data_nozero$datetime <- format(as.POSIXct(paste(data_nozero$DATE, data_nozero$TIMESTAMP)), "%Y-%m-%d %H:%M:%S")
data_nozero$datetime <- strptime(data_nozero$datetime, "%Y-%m-%d %H:%M:%S")
data_nozero <- data_nozero[order(data_nozero$datetime) , ]
regmdl <- lm(SPEED ~ REGION + WEEKDAY + HOUR + HasGame)
regmdl <- lm(SPEED ~ REGION + WEEKDAY + HOUR + HasGame,data = data_nozero)
summary(regmdl)
regmdl <- lm(SPEED ~ REGION + WEEKDAY + HOUR + REGION:WEEKDAY + REGION:HOUR + HasGame,data = data_nozero)
summary(regmdl)
regmdl <- lm(SPEED ~ REGION + WEEKDAY + HOUR + REGION:HasGame,data = data_nozero)
summary(regmdl)
regmdl <- lm(SPEED ~ REGION + WEEKDAY + HOUR + + REGION:WEEKDAY + REGION:HOUR + REGION:HasGame,data = data_nozero)
summary(regmdl)
summary(regmdl)
regmdl <- lm(SPEED ~ REGION + WEEKDAY + HOUR + REGION:WEEKDAY + REGION:HasGame,data = data_nozero)
summary(regmdl)
regmdl <- lm(SPEED ~ REGION + WEEKDAY + HOUR + REGION:WEEKDAY + REGION:HOUR + HasGame,data = data_nozero)
summary(regmdl)
rm1 <- lm(SPEED ~ REGION + WEEKDAY + HOUR + REGION:WEEKDAY + REGION:HOUR,data = data_nozero)
summary(rm1)
rm2 <- lm(SPEED ~ REGION + WEEKDAY + HOUR + REGION:WEEKDAY,data = data_nozero)
summary(rm2)
rm3 <- lm(SPEED ~ REGION + WEEKDAY + HOUR,data = data_nozero)
summary(rm3)
rm2 <- lm(SPEED ~ REGION + WEEKDAY + HOUR + REGION:HOUR,data = data_nozero)
summary(rm2)
data_nozero$WEEKDAY <- as.factor(data_nozero$WEEKDAY)
data_nozero$HOUR <- as.factor(data_nozero$HOUR)
rm1 <- lm(SPEED ~ REGION + WEEKDAY + HOUR + REGION:WEEKDAY + REGION:HOUR,data = data_nozero)
summary(rm1)
rm2 <- lm(SPEED ~ REGION + WEEKDAY + HOUR + REGION:WEEKDAY,data = data_nozero)
summary(rm2)
rm3 <- lm(SPEED ~ REGION + WEEKDAY + HOUR,data = data_nozero)
summary(rm3)
rm1 <- lm(SPEED ~ REGION:WEEKDAY + REGION:HOUR,data = data_nozero)
summary(rm1)
rm4 <- lm(SPEED ~ REGION + WEEKDAY + HOUR + REGION:WEEKDAY + REGION:HOUR + HasGame,data = data_nozero)
summary(rm4)
rm5 <- lm(SPEED ~ REGION:WEEKDAY + REGION:HOUR + REGION:HasGame,data = data_nozero)
summary(rm5)
View(data_nozero)
summary(data_West)
library(ggplot2)
library(stargazer)
library(AER)
library(knitr)
library(lmtest)
library(sandwich)
library(car)
library(GGally)
opts_chunk$set(warning = FALSE, message = FALSE)
#CHANGE TO WORKING DIRECTORY
setwd("~/Documents/MIDS/210Capstone/should-i-go-sandbox/")
# Load Datasets
data <- read.csv('Jan2015_TimeSeries.csv')
# Remove zero and irrationally high values
data_nozero <-data[data$SPEED>0,]
data_nozero <-data_nozero[data_nozero$SPEED<46,]
# Group timestamps into hours
data_nozero$HOUR <- substring(as.character(data_nozero$TIMESTAMP),1,2)
data_nozero$DAYHOUR <- paste(data_nozero$WEEKDAY,data_nozero$HOUR, sep='-')
# Remove midnight - 4am when most busses are in the yard
data_nozero <-data_nozero[data_nozero$HOUR>'04',]
#Aggregate to get average speed
avgspeed <- aggregate(SPEED ~ WEEKDAY + HOUR, data = data_nozero, mean)
#dev.off()
#Let's start by looking at a heat map of days and hours compared to speed
ggplot(data = avgspeed, aes(x=WEEKDAY, y=HOUR, fill=SPEED)) +
geom_tile()+
scale_fill_gradient2(low = "white", high = "steelblue", name="Avg Speed")+
xlab('Weekday (Monday = 0)') +
ylab('Hour') +
ggtitle('Average Speed by Weekday and Hour')
#Monday - Friday:
data_nozero$datetime <- format(as.POSIXct(paste(data_nozero$DATE, data_nozero$TIMESTAMP)), "%Y-%m-%d %H:%M:%S")
data_nozero$datetime <- strptime(data_nozero$datetime, "%Y-%m-%d %H:%M:%S")
data_nozero <- data_nozero[order(data_nozero$datetime) , ]
rm1 <- lm(SPEED ~ REGION + WEEKDAY + HOUR + REGION:WEEKDAY + REGION:HOUR,data = data_nozero)
summary(rm1)
rm2 <- lm(SPEED ~ REGION + WEEKDAY + HOUR + REGION:WEEKDAY,data = data_nozero)
summary(rm2)
rm3 <- lm(SPEED ~ REGION + WEEKDAY + HOUR,data = data_nozero)
summary(rm3)
rm4 <- lm(SPEED ~ REGION + WEEKDAY + HOUR + REGION:WEEKDAY + REGION:HOUR + HasGame,data = data_nozero)
summary(rm4)
rm5 <- lm(SPEED ~ REGION:WEEKDAY + REGION:HOUR + REGION:HasGame,data = data_nozero)
summary(rm5)
data_nozero$WEEKDAY <- as.factor(data_nozero$WEEKDAY)
rm1 <- lm(SPEED ~ REGION + WEEKDAY + HOUR + REGION:WEEKDAY + REGION:HOUR,data = data_nozero)
summary(rm1)
test_data <- data_nozero[data_nozero$DATE == '2015-01-05' && data_nozero$HOUR == "20", c('DATE','HOUR','REGION','HasGame')]
test_data <- data_nozero[data_nozero$DATE == '2015-01-05' && data_nozero$HOUR == '20', c('DATE','HOUR','REGION','HasGame')]
test_data <- data_nozero[data_nozero$DATE == "2015-01-05" && data_nozero$HOUR == "20", c('DATE','HOUR','REGION','HasGame')]
test_data <- data_nozero[data_nozero$DATE == "2015-01-05", c('DATE','HOUR','REGION','HasGame')]
View(test_data)
View(test_data)
data_nozero$DATE == "2015-01-05" && data_nozero$HOUR == "19"
data_nozero$DATE == "2015-01-05" & data_nozero$HOUR == "19"
data_nozero$DATE == "2015-01-05" & data_nozero$HOUR == 19
test_data <- data_nozero[(data_nozero$DATE == "2015-01-05"), c('DATE','HOUR','REGION','HasGame')]
View(test_data)
data_nozero$HOUR == "05"
data_nozero$HOUR == "5"
data_nozero$HOUR == "20"
View(data_nozero)
data_nozero$HOUR == "05"
data_nozero$HOUR == '05'
data_nozero$DATE == "2015-01-05" & data_nozero$HOUR == '05'
test_data <- data_nozero[(data_nozero$DATE == "2015-01-05" & data_nozero$HOUR == '05'), c('DATE','HOUR','REGION','HasGame')]
View(test_data)
test_data_nogame$HasGame <- 0
test_data_nogame <- data_nozero[(data_nozero$DATE == "2015-01-05" & data_nozero$HOUR == '05'), c('DATE','HOUR','REGION','HasGame')]
test_data_nogame$HasGame <- 0
View(test_data)
test_data_nogame$PredictedRate <- predict(rm1, data = test_data_nogame)
test_data_nogame <- data_nozero[(data_nozero$DATE == "2015-01-05" & data_nozero$HOUR == '20'), c('DATE','HOUR','REGION','HasGame')]
test_data_nogame$HasGame <- 0
test_data_nogame$PredictedRate <- predict(rm1, data = test_data_nogame)
test_data_game <- data_nozero[(data_nozero$DATE == "2015-01-05" & data_nozero$HOUR == '20'), c('DATE','HOUR','REGION','HasGame')]
test_data_game$HasGame <- 1
test_data_game$PredictedRate <- predict(rm1, data = test_data_game)
test_data_nogame <- data_nozero[(data_nozero$DATE == "2015-01-05" & data_nozero$HOUR == '20'), c('DATE','HOUR','REGION','HasGame')]
test_data_nogame$HasGame <- 0
test_data_nogame$PredictedRate <- predict(rm1, data = test_data_nogame)
predict(rm1, data = test_data_nogame)
test_data_nogame <- data_nozero[(data_nozero$DATE == "2015-01-05" & data_nozero$HOUR == '20'), c('DATE','HOUR','WEEKDAY',REGION','HasGame')]
test_data_nogame$HasGame <- 0
test_data_nogame <- data_nozero[(data_nozero$DATE == "2015-01-05" & data_nozero$HOUR == '20'), c('DATE','HOUR','WEEKDAY','REGION','HasGame')]
test_data_nogame$HasGame <- 0
test_data_nogame$PredictedRate <- predict(rm1, data = test_data_nogame)
predict(rm1, data = test_data_nogame)
test_data_nogame <- data_nozero[(data_nozero$DATE == "2015-01-05" & data_nozero$HOUR == '20'), ]
test_data_nogame$HasGame <- 0
test_data_nogame$PredictedRate <- predict(rm1, data = test_data_nogame)
test_data_nogame <- data_nozero[(data_nozero$DATE == "2015-01-05" & data_nozero$HOUR == '20'), ]
test_data_nogame$HasGame <- 0
test_data_nogame$PredictedRate <- predict(rm1, data = test_data_nogame)
View(test_data_nogame)
predict(rm1, data = test_data_nogame)
test_data_nogame$PredictedRate <- predict(rm1, data = test_data_nogame)
test_data_nogame$PredictedRate <- predict(rm1, newdata = test_data_nogame)
test_data_game <- data_nozero[(data_nozero$DATE == "2015-01-05" & data_nozero$HOUR == '20'), ]
test_data_game$HasGame <- 1
test_data_game$PredictedRate <- predict(rm5, newdata = test_data_game)
View(test_data_game)
rm5 <- lm(SPEED ~ REGION:WEEKDAY + REGION:HOUR + REGION:HasGame,data = data_nozero)
summary(rm5)
test_data_game <- data_nozero[(data_nozero$DATE == "2015-01-05" & data_nozero$HOUR == '20'), ]
test_data_game$HasGame <- 1
test_data_game$PredictedRate <- predict(rm5, newdata = test_data_game)
test_data_nogame <- test_data_nogame[, c('datetime','REGION_ID','PredictedRate')]
test_data_game <- test_data_game[, c('datetime','REGION_ID','PredictedRate')]
write.csv(test_data_nogame, file = "test_data_nogame.csv")
write.csv(test_data_game, file = "test_data_game.csv")
